<?php

/**
 * «Copyright 2012 Jeysson José Guevara Mendivil(JeyDotC)» 
 * 
 * This file is part of Hirudo.
 * 
 * Hirudo is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 *  Hirudo is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with Hirudo.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * This hook gives support for drupal 6
 * 
 * @param string $op The block operation
 * @param mixed $delta A unique id for the block
 * @param array $edit
 * 
 * @return array|void
 */
function hirudo_block($op = 'list', $delta = 0, $edit = array()) {
    if ($op == "list") {
        return hirudo_block_info();
    } else if ($op == "view") {
        return hirudo_block_view($delta);
    }
}

/**
 * This method provides the Hirudo block information that allows Hirudo
 * applications to be rendered on drupal.
 * 
 * @return array The block configuration.
 */
function hirudo_block_info() {
    return array(
        "hirudo" => array(
            "info" => "Hirudo framework",
            'cache' => DRUPAL_NO_CACHE,
            "visibility" => BLOCK_VISIBILITY_LISTED,
            "pages" => "App",
        )
    );
}

/**
 * Renders the Hirudo block. Also invokes the Hirudo process.
 * 
 * @param string $delta The block's delta, it should be "hirudo" in order to render. 
 * @return array The rendered block
 */
function hirudo_block_view($delta = '') {
    $block = array();

    if ($delta == "hirudo") {
        require_once 'init.php';
        //Yep, a Dirty Quick fix to hide node's title for this block
        drupal_add_js("(function ($) { $('.title').hide() })(jQuery);", array('type' => 'inline', 'scope' => 'footer'));

        $manager = new ModulesManager(array(
                    //The request data.
                    'Hirudo\Impl\Drupal\DrupalRequest',
                    //The URL builder.
                    'Hirudo\Impl\Drupal\DrupalRouting',
                    //The session Manager.
                    'Hirudo\Impl\Drupal\DrupalSession',
                    //The current user.
                    'Hirudo\Impl\Drupal\DrupalPrincipal',
                    //The configuration manager.
                    'Hirudo\Impl\StandAlone\SAppConfig',
                    //The templating system.
                    'Hirudo\Impl\Common\Templating\SmartyTemplating',
                    //The Asset system
                    'Hirudo\Impl\Drupal\DrupalAssets',
                ));

        $block = array(
            "subject" => "<none>",
            "content" => $manager->run()
        );
    }

    return $block;
}

function hirudo_node_info() {
    /* "name": the human-readable name of the node type. Required.
      "module": a string telling Drupal how a module's functions map to hooks (i.e. if module is defined as example_foo, then example_foo_insert will be called when inserting a node of that type). This string is usually the name of the module in question, but not always. Required.
      "description": a brief description of the node type. Required.
      "has_title": boolean indicating whether or not this node type has a title field. Optional (defaults to TRUE).
      "has_body": boolean indicating whether or not this node type has a body field. Optional (defaults to TRUE).
     */
    return array(
        "hirudo" => array(
            "name" => "Hirudo PHP Web Framework",
            "module" => "hirudo", // For drupal 6
            "base" => "hirudo",
            "description" => "A node to hold the Hirudo app presentations.",
            "has_title" => false,
        )
    );
}

/**
 * For drupal 6.
 * 
 * @param type $op
 * @param type $info
 */
function hirudo_node_type($op, $info) {
    if ($op == "insert") {
        hirudo_node_type_insert($info);
    }
}

function hirudo_node_type_insert($info) {
    if ($info->type == "hirudo") {
        if (class_exists("Drupal\node\Node")) {
            $fakeNode = new Drupal\node\Node();
        } else {
            $fakeNode = new stdClass();
        }

        $fakeNode->uid = 1;
        $fakeNode->status = 1;
        $fakeNode->type = "hirudo";
        $fakeNode->language = "und";
        $fakeNode->name = "JeyDotC";
        $fakeNode->is_new = true;

        node_save($fakeNode);

        if (drupal_lookup_path("source", "App") === false) {
            $source = "node/{$fakeNode->nid}";
            $alias = "App";
            if (function_exists("path_save")) {
                path_save(array(
                    "source" => $source,
                    "alias" => $alias
                ));
            }else{
                path_set_alias($source, $alias);
            }
        }
    }
}

?>